`include "IDCTAXI.v"

module testbench;
  reg        clock;
  reg        reset;
  reg [11:0] i00, i01, i02, i03, i04, i05, i06, i07,
             i08, i09, i10, i11, i12, i13, i14, i15,
             i16, i17, i18, i19, i20, i21, i22, i23,
             i24, i25, i26, i27, i28, i29, i30, i31,
             i32, i33, i34, i35, i36, i37, i38, i39,
             i40, i41, i42, i43, i44, i45, i46, i47,
             i48, i49, i50, i51, i52, i53, i54, i55,
             i56, i57, i58, i59, i60, i61, i62, i63;
  wire [8:0] o00, o01, o02, o03, o04, o05, o06, o07,
             o08, o09, o10, o11, o12, o13, o14, o15,
             o16, o17, o18, o19, o20, o21, o22, o23,
             o24, o25, o26, o27, o28, o29, o30, o31,
             o32, o33, o34, o35, o36, o37, o38, o39,
             o40, o41, o42, o43, o44, o45, o46, o47,
             o48, o49, o50, o51, o52, o53, o54, o55,
             o56, o57, o58, o59, o60, o61, o62, o63;

  IDCT idct(
  //  clock,
  //  reset,
    i00, i01, i02, i03, i04, i05, i06, i07,
    i08, i09, i10, i11, i12, i13, i14, i15,
    i16, i17, i18, i19, i20, i21, i22, i23,
    i24, i25, i26, i27, i28, i29, i30, i31,
    i32, i33, i34, i35, i36, i37, i38, i39,
    i40, i41, i42, i43, i44, i45, i46, i47,
    i48, i49, i50, i51, i52, i53, i54, i55,
    i56, i57, i58, i59, i60, i61, i62, i63,
    o00, o01, o02, o03, o04, o05, o06, o07,
    o08, o09, o10, o11, o12, o13, o14, o15,
    o16, o17, o18, o19, o20, o21, o22, o23,
    o24, o25, o26, o27, o28, o29, o30, o31,
    o32, o33, o34, o35, o36, o37, o38, o39,
    o40, o41, o42, o43, o44, o45, o46, o47,
    o48, o49, o50, o51, o52, o53, o54, o55,
    o56, o57, o58, o59, o60, o61, o62, o63
  );

  task apply(
    input [11:0]
      x00, x01, x02, x03, x04, x05, x06, x07,
      x08, x09, x10, x11, x12, x13, x14, x15,
      x16, x17, x18, x19, x20, x21, x22, x23,
      x24, x25, x26, x27, x28, x29, x30, x31,
      x32, x33, x34, x35, x36, x37, x38, x39,
      x40, x41, x42, x43, x44, x45, x46, x47,
      x48, x49, x50, x51, x52, x53, x54, x55,
      x56, x57, x58, x59, x60, x61, x62, x63
  );
    begin
      i00 <= x00; i01 <= x01; i02 <= x02; i03 <= x03; i04 <= x04; i05 <= x05; i06 <= x06; i07 <= x07;
      i08 <= x08; i09 <= x09; i10 <= x10; i11 <= x11; i12 <= x12; i13 <= x13; i14 <= x14; i15 <= x15;
      i16 <= x16; i17 <= x17; i18 <= x18; i19 <= x19; i20 <= x20; i21 <= x21; i22 <= x22; i23 <= x23;
      i24 <= x24; i25 <= x25; i26 <= x26; i27 <= x27; i28 <= x28; i29 <= x29; i30 <= x30; i31 <= x31;
      i32 <= x32; i33 <= x33; i34 <= x34; i35 <= x35; i36 <= x36; i37 <= x37; i38 <= x38; i39 <= x39;
      i40 <= x40; i41 <= x41; i42 <= x42; i43 <= x43; i44 <= x44; i45 <= x45; i46 <= x46; i47 <= x47;
      i48 <= x48; i49 <= x49; i50 <= x50; i51 <= x51; i52 <= x52; i53 <= x53; i54 <= x54; i55 <= x55;
      i56 <= x56; i57 <= x57; i58 <= x58; i59 <= x59; i60 <= x60; i61 <= x61; i62 <= x62; i63 <= x63;
    end
  endtask

  task check(
    input [8:0]
      y00, y01, y02, y03, y04, y05, y06, y07,
      y08, y09, y10, y11, y12, y13, y14, y15,
      y16, y17, y18, y19, y20, y21, y22, y23,
      y24, y25, y26, y27, y28, y29, y30, y31,
      y32, y33, y34, y35, y36, y37, y38, y39,
      y40, y41, y42, y43, y44, y45, y46, y47,
      y48, y49, y50, y51, y52, y53, y54, y55,
      y56, y57, y58, y59, y60, y61, y62, y63
  );
    begin
      if (o00 == y00 && o01 == y01 && o02 == y02 && o03 == y03 && o04 == y04 && o05 == y05 && o06 == y06 && o07 == y07 &&
          o08 == y08 && o09 == y09 && o10 == y10 && o11 == y11 && o12 == y12 && o13 == y13 && o14 == y14 && o15 == y15 &&
          o16 == y16 && o17 == y17 && o18 == y18 && o19 == y19 && o20 == y20 && o21 == y21 && o22 == y22 && o23 == y23 &&
          o24 == y24 && o25 == y25 && o26 == y26 && o27 == y27 && o28 == y28 && o29 == y29 && o30 == y30 && o31 == y31 &&
          o32 == y32 && o33 == y33 && o34 == y34 && o35 == y35 && o36 == y36 && o37 == y37 && o38 == y38 && o39 == y39 &&
          o40 == y40 && o41 == y41 && o42 == y42 && o43 == y43 && o44 == y44 && o45 == y45 && o46 == y46 && o47 == y47 &&
          o48 == y48 && o49 == y49 && o50 == y50 && o51 == y51 && o52 == y52 && o53 == y53 && o54 == y54 && o55 == y55 &&
          o56 == y56 && o57 == y57 && o58 == y58 && o59 == y59 && o60 == y60 && o61 == y61 && o62 == y62 && o63 == y63)
        begin
          $display("Passed");
        end
      else
        begin
          $display("Failed");
        end
    end
  endtask

  task test(
    input [11:0]
      x00, x01, x02, x03, x04, x05, x06, x07,
      x08, x09, x10, x11, x12, x13, x14, x15,
      x16, x17, x18, x19, x20, x21, x22, x23,
      x24, x25, x26, x27, x28, x29, x30, x31,
      x32, x33, x34, x35, x36, x37, x38, x39,
      x40, x41, x42, x43, x44, x45, x46, x47,
      x48, x49, x50, x51, x52, x53, x54, x55,
      x56, x57, x58, x59, x60, x61, x62, x63,
    input [8:0]
      y00, y01, y02, y03, y04, y05, y06, y07,
      y08, y09, y10, y11, y12, y13, y14, y15,
      y16, y17, y18, y19, y20, y21, y22, y23,
      y24, y25, y26, y27, y28, y29, y30, y31,
      y32, y33, y34, y35, y36, y37, y38, y39,
      y40, y41, y42, y43, y44, y45, y46, y47,
      y48, y49, y50, y51, y52, y53, y54, y55,
      y56, y57, y58, y59, y60, y61, y62, y63
  );
    begin
      apply(
        x00, x01, x02, x03, x04, x05, x06, x07,
        x08, x09, x10, x11, x12, x13, x14, x15,
        x16, x17, x18, x19, x20, x21, x22, x23,
        x24, x25, x26, x27, x28, x29, x30, x31,
        x32, x33, x34, x35, x36, x37, x38, x39,
        x40, x41, x42, x43, x44, x45, x46, x47,
        x48, x49, x50, x51, x52, x53, x54, x55,
        x56, x57, x58, x59, x60, x61, x62, x63
      );
      #1;
      check(
        y00, y01, y02, y03, y04, y05, y06, y07,
        y08, y09, y10, y11, y12, y13, y14, y15,
        y16, y17, y18, y19, y20, y21, y22, y23,
        y24, y25, y26, y27, y28, y29, y30, y31,
        y32, y33, y34, y35, y36, y37, y38, y39,
        y40, y41, y42, y43, y44, y45, y46, y47,
        y48, y49, y50, y51, y52, y53, y54, y55,
        y56, y57, y58, y59, y60, y61, y62, y63
      );
    end
  endtask

  initial begin
    $dumpfile("testbench.vcd");
    $dumpvars(5, testbench);

    clock <= 0;
    reset <= 0;

    //--------------------------------------------------------------------------
    // Test 0
    //--------------------------------------------------------------------------
    test(  23,  -1,  -2,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,

            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3,
            2,   3,   3,   3,   3,   3,   3,   3);

    //--------------------------------------------------------------------------
    // Test 1
    //--------------------------------------------------------------------------
    test(  13,  -7,   0,   0,   0,   0,   0,   0,
            0,   2,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,

            1,   1,   1,   1,   2,   2,   2,   2,
            1,   1,   1,   1,   2,   2,   2,   2,
            1,   1,   1,   1,   2,   2,   2,   3,
            1,   1,   1,   1,   2,   2,   3,   3,
            0,   1,   1,   1,   2,   2,   3,   3,
            0,   0,   1,   1,   2,   2,   3,   3,
            0,   0,   1,   1,   2,   3,   3,   3,
            0,   0,   1,   1,   2,   3,   3,   3);

    //--------------------------------------------------------------------------
    // Test 2
    //--------------------------------------------------------------------------
    test(-166,  -7,  -4,  -4,   0,   0,   0,   0,
           -2,   0,   0,   0,   0,   0,   0,   0,
           -2,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,
            0,   0,   0,   0,   0,   0,   0,   0,

          -24, -23, -21, -21, -21, -21, -21, -20,
          -24, -22, -21, -20, -21, -21, -21, -20,
          -23, -22, -21, -20, -20, -21, -20, -20,
          -23, -22, -20, -20, -20, -20, -20, -19,
          -23, -22, -20, -20, -20, -20, -20, -19,
          -23, -22, -20, -20, -20, -20, -20, -19,
          -23, -22, -20, -20, -20, -20, -20, -19,
          -23, -22, -20, -20, -20, -20, -20, -20);

    //--------------------------------------------------------------------------
    // Test 3
    //--------------------------------------------------------------------------
    test(-240,   8, -11,  47,  26,  -6,   0,   5,
           28,  -6,  85,  44,  -4, -25,   5,  16,
           21,   8,  32, -16, -24,   0,  30,  12,
           -2,  18,   0,  -2,   0,   7,   0, -15,
            7,   4,  15, -24,   0,   9,   8,  -6,
            4,   9,   0,  -5,  -6,   0,   0,   0,
           -4,   0,  -6,   0,   0,  10, -10,  -8,
            6,   0,   0,   0,   0,   0,   0,  -8,

           21, -10, -26, -61, -43, -17, -22,  -8,
            5, -28, -47, -73, -11, -14, -24, -17,
          -14, -31, -61, -45,  -5, -18, -22, -34,
          -23, -36, -49, -32, -12, -33, -33, -35,
          -30, -39, -53,  -8, -19, -31, -43, -42,
          -41, -43, -50,  -4, -15, -33, -44, -66,
          -40, -38, -21, -14, -17, -26, -46, -52,
          -44, -47,  -9, -12, -30, -33, -38, -37);

    $finish();
  end

endmodule
